import { ModelId } from "@app/lib/databases";
import {
  RetrievalConfigurationType,
  RetrievalQuery,
  RetrievalTimeframe,
} from "@app/types/assistant/actions/retrieval";

/**
 * Agent config
 */
export type AgentConfigurationStatus = "active" | "archived";
export type AgentConfigurationScope = "global" | "workspace";
export type AgentConfigurationType = {
  sId: string;
  status: AgentConfigurationStatus;
  name: string;
  pictureUrl: string | null;
  action: AgentActionConfigurationType | null; // If undefined, no action performed
  generation: AgentGenerationConfigurationType | null; // If undefined, no text generation.
};

/**
 * Generation config
 */
export type AgentGenerationConfigurationType = {
  id: ModelId;
  prompt: string;
  model: {
    providerId: string;
    modelId: string;
  };
};

/**
 * Action > Retrieval
 */
// Each AgentActionConfigurationType is capable of generating this type at runtime to specify which
// inputs should be generated by the model. As an example, to run the retrieval action for which the
// `relativeTimeFrame` has been specified in the configuration but for which the `query` is "auto",
// it would generate:
//
// ```
// { inputs: [{ name: "query", description: "...", type: "string" }]
// ```
//
// The params generator model for this action would be tasked to generate that query. If the
// retrieval configuration sets `relativeTimeFrame` to "auto" as well we would get:
//
// ```
// {
//   inputs: [
//     { name: "query", description: "...", type: "string" },
//     { name: "relativeTimeFrame", description: "...", type: "string" },
//   ]
// }
// ```
export type AgentActionConfigurationType = RetrievalConfigurationType;
